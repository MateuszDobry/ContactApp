// <auto-generated />
using System;
using ContactApp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactApp.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250528075112_AddMoreSeededData")]
    partial class AddMoreSeededData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("ContactApp.Api.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataUrodzenia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("HasloHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("KategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PodkategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("KategoriaId");

                    b.HasIndex("PodkategoriaId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Email = "test@test.pl",
                            HasloHash = "ecd71870d1963316a97e3ac3408c9835ad8cf0f3c1bc703527c30265534f75ae",
                            Imie = "Test",
                            KategoriaId = 2,
                            Nazwisko = "Testowski",
                            Telefon = "111222333"
                        },
                        new
                        {
                            Id = 5,
                            DataUrodzenia = new DateTime(1990, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anna.kowalska@example.com",
                            HasloHash = "fbb4a8a163ffa958b4f02bf9cabb30cfefb40de803f2c4c346a9d39b3be1b544",
                            Imie = "Anna",
                            KategoriaId = 1,
                            Nazwisko = "Kowalska",
                            PodkategoriaId = 2,
                            Telefon = "444555666"
                        },
                        new
                        {
                            Id = 6,
                            Email = "piotr.nowak@email.com",
                            HasloHash = "e8b97e11e6240b2bac77fcd9d654495475cfe6e2cdfe6a0c8e6619f90c98080e",
                            Imie = "Piotr",
                            KategoriaId = 3,
                            Nazwisko = "Nowak",
                            PodkategoriaId = 1,
                            Telefon = "777888999"
                        },
                        new
                        {
                            Id = 7,
                            DataUrodzenia = new DateTime(1985, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zofia.wojcik@mail.pl",
                            HasloHash = "5421cfd52b4989d7e464d3a13a52626a9b64c3016baec6f2b7df90f0c13e913c",
                            Imie = "Zofia",
                            KategoriaId = 2,
                            Nazwisko = "Wojcik",
                            Telefon = "123456789"
                        });
                });

            modelBuilder.Entity("ContactApp.Api.Models.ContactCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContactCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nazwa = "Służbowy"
                        },
                        new
                        {
                            Id = 2,
                            Nazwa = "Prywatny"
                        },
                        new
                        {
                            Id = 3,
                            Nazwa = "Inny"
                        });
                });

            modelBuilder.Entity("ContactApp.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HasloHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jan@example.com",
                            HasloHash = "a15f8ae07675bfb96e084bfb4f52fb2c22091061aae86e0eb76a55f4e52dd74e",
                            Imie = "Jan"
                        });
                });

            modelBuilder.Entity("ContactSubcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KategoriaId");

                    b.ToTable("ContactSubcategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KategoriaId = 1,
                            Nazwa = "Szef"
                        },
                        new
                        {
                            Id = 2,
                            KategoriaId = 1,
                            Nazwa = "Klient"
                        },
                        new
                        {
                            Id = 3,
                            KategoriaId = 1,
                            Nazwa = "Współpracownik"
                        });
                });

            modelBuilder.Entity("ContactApp.Api.Models.Contact", b =>
                {
                    b.HasOne("ContactApp.Api.Models.ContactCategory", "Kategoria")
                        .WithMany()
                        .HasForeignKey("KategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContactSubcategory", "Podkategoria")
                        .WithMany()
                        .HasForeignKey("PodkategoriaId");

                    b.Navigation("Kategoria");

                    b.Navigation("Podkategoria");
                });

            modelBuilder.Entity("ContactSubcategory", b =>
                {
                    b.HasOne("ContactApp.Api.Models.ContactCategory", "Kategoria")
                        .WithMany()
                        .HasForeignKey("KategoriaId");

                    b.Navigation("Kategoria");
                });
#pragma warning restore 612, 618
        }
    }
}
